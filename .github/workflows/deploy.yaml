## github work flow
name: Deploy Node.js App

on:
  push:
    branches: [ main ]

jobs:
  build-deploy:
    name: Unit testing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write

    steps:
      - 
        name: Checkout Code
        uses: actions/checkout@v4
      
      - 
        name: Set Short SHA
        run: |
          echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - 
        name: Install dependencies
        run: npm ci

      - 
        name: Static code Analysis
        run: npm run lint

      - 
        name: Build Docker Image
        run: |
          docker build -t mosesade/nodejs-service:${{ env.SHORT_SHA }} .

      - 
        name: Security scan of Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: mosesade/nodejs-service:${{ env.SHORT_SHA }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - 
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      -
        name: Push Image to Registry
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: mosesade/nodejs-service:${{ env.SHORT_SHA }}

      -
        name: Terraform SetUp
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
      
      -
        name: Terraform Init
        id: init
        run: terraform init

      -
        name: Terraform Format
        id: fmt
        run: terraform fmt -check

      -
        name: Terraform Validate
        id: validate
        run: terraform validate
      
      -
        name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: false

      -
        name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

      -
        name: Get Nodes
        run: kubectl get nodes

      -
        name: Configure Git Authour
        run: |
          git config --global user.email "moses.adelere@gmail.com"
          git config --global user.name  "Moses A."

      -
        name: Update Helm with Github SHA
        run: |
          sed -i "s/tag:.*/tag: ${{ env.SHORT_SHA }}/" /nodejs-deploy/values.yaml
          pwd

      -
        name: Update Helm chart with new image tag
        run: |
          ls -la
          git add /nodejs-deploy/values.yaml
          if git diff --cached --quiet; then
            echo "No changess to commit."
          else
            git commit -m "Updated image tag to ${{ env.SHORT_SHA }}"
            git push https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/mosesadelere/nodejs-docker-deploy.git
          fi
        